# Generated by Django 5.2.3 on 2025-06-24 22:23

import cases.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='The internal unique identifier for the case (UUID).', primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CLOSED', 'Closed'), ('WITHDRAWN', 'Withdrawn'), ('UNDER_REVIEW', 'Under Review'), ('ERROR', 'Error')], default='OPEN', help_text='The current status of the case.', max_length=20)),
                ('case_reference', models.CharField(help_text='The human-readable, unique identifier for this case (e.g., 2025-0114).', max_length=6, unique=True)),
                ('data_subject_name', models.CharField(help_text='Full name of the data subject.', max_length=255)),
                ('data_subject_dob', models.DateField(blank=True, help_text='Date of birth of the data subject.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('retention_review_date', models.DateField(default=cases.models.retention_review_date_default, help_text='Date when this case should be reviewed for retention.')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_cases', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_cases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_file', models.FileField(help_text='The original, unmodified uploaded file.', upload_to='originals/%Y/%m/%d/')),
                ('filename', models.CharField(blank=True, max_length=255)),
                ('file_type', models.CharField(blank=True, max_length=10)),
                ('status', models.CharField(choices=[('PROCESSING', 'Processing'), ('READY', 'Ready for Review'), ('COMPLETED', 'Completed'), ('ERROR', 'Error')], default='PROCESSING', max_length=20)),
                ('extracted_text', models.TextField(blank=True, editable=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='cases.case')),
            ],
            options={
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Redaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_char', models.IntegerField()),
                ('end_char', models.IntegerField()),
                ('text', models.TextField(help_text='The actual text that was redacted.')),
                ('redaction_type', models.CharField(choices=[('OP_DATA', 'Operational Data'), ('PII', 'Third-Party PII')], max_length=10)),
                ('is_suggestion', models.BooleanField(default=True, help_text='True if this was created by the AI, False if created manually by a user.')),
                ('is_accepted', models.BooleanField(default=False, help_text='True if the user has confirmed this redaction should be applied.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redactions', to='cases.document')),
            ],
            options={
                'ordering': ['start_char'],
            },
        ),
    ]
